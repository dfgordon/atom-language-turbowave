name: 'turbowave'
scopeName: 'input.turbowave'
type: 'tree-sitter'
parser: 'tree-sitter-turbowave'

fileTypes: [
  'tw'
]

contentRegex: 'new ([a-zA-Z_]\\w*\\s)+for'

folds: [
  {
    type: ['comment']
  }
  {
    type: ['block']
    start: {index: 0}
    end: {index: -1}
  }
]

comments:
 start: '// '

scopes:
  '"#include"': 'keyword.control.directive'
  '"#define"': 'keyword.control.directive'

  '"new"': 'keyword.control'
  '"generate"': 'keyword.control'
  '"for"': 'keyword.control'
  '"get"': 'keyword.control'

  '''
  new > identifier_sequence,
  associative_new > identifier_sequence,
  generate > identifier_sequence
  ''' : 'builtin.object.tw'

  'comment' : 'comment.block'
  'define_key' : 'variable.other.tw'
  'decimal' : 'constant.numeric.decimal'
  'dimension' : 'constant.other.tw'
  'string_literal' : 'string.quoted.single'
  'boolean': 'constant.language.boolean'

  '","': 'punctuation.separator.delimiter'
  '"{"': 'punctuation.section.block.begin.bracket.curly'
  '"}"': 'punctuation.section.block.end.bracket.curly'
  '"("': 'punctuation.section.parens.begin.bracket.round'
  '")"': 'punctuation.section.parens.end.bracket.round'
